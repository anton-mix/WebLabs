
package lab3;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "SoapManager", targetNamespace = "http://Lab3/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface SoapManager {


    /**
     * 
     * @param sex
     * @param name
     * @param id
     * @param age
     * @param secondName
     * @return
     *     returns java.util.List<lab3.SqlObject>
     * @throws MissFormatException
     */
    @WebMethod(operationName = "Select")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Select", targetNamespace = "http://Lab3/", className = "lab3.Select")
    @ResponseWrapper(localName = "SelectResponse", targetNamespace = "http://Lab3/", className = "lab3.SelectResponse")
    @Action(input = "http://Lab3/SoapManager/SelectRequest", output = "http://Lab3/SoapManager/SelectResponse", fault = {
        @FaultAction(className = MissFormatException.class, value = "http://Lab3/SoapManager/Select/Fault/MissFormatException")
    })
    public List<SqlObject> select(
        @WebParam(name = "Id", targetNamespace = "")
        String id,
        @WebParam(name = "Name", targetNamespace = "")
        String name,
        @WebParam(name = "SecondName", targetNamespace = "")
        String secondName,
        @WebParam(name = "Age", targetNamespace = "")
        String age,
        @WebParam(name = "Sex", targetNamespace = "")
        String sex)
        throws MissFormatException
    ;

    /**
     * 
     * @param sex
     * @param name
     * @param id
     * @param age
     * @param secondName
     * @return
     *     returns java.lang.String
     * @throws OutOfRangeException
     * @throws MissFormatException
     */
    @WebMethod(operationName = "Update")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Update", targetNamespace = "http://Lab3/", className = "lab3.Update")
    @ResponseWrapper(localName = "UpdateResponse", targetNamespace = "http://Lab3/", className = "lab3.UpdateResponse")
    @Action(input = "http://Lab3/SoapManager/UpdateRequest", output = "http://Lab3/SoapManager/UpdateResponse", fault = {
        @FaultAction(className = MissFormatException.class, value = "http://Lab3/SoapManager/Update/Fault/MissFormatException"),
        @FaultAction(className = OutOfRangeException.class, value = "http://Lab3/SoapManager/Update/Fault/OutOfRangeException")
    })
    public String update(
        @WebParam(name = "Id", targetNamespace = "")
        String id,
        @WebParam(name = "Name", targetNamespace = "")
        String name,
        @WebParam(name = "SecondName", targetNamespace = "")
        String secondName,
        @WebParam(name = "Age", targetNamespace = "")
        String age,
        @WebParam(name = "Sex", targetNamespace = "")
        String sex)
        throws MissFormatException, OutOfRangeException
    ;

    /**
     * 
     * @param id
     * @return
     *     returns java.lang.String
     * @throws OutOfRangeException
     * @throws MissFormatException
     */
    @WebMethod(operationName = "Delete")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Delete", targetNamespace = "http://Lab3/", className = "lab3.Delete")
    @ResponseWrapper(localName = "DeleteResponse", targetNamespace = "http://Lab3/", className = "lab3.DeleteResponse")
    @Action(input = "http://Lab3/SoapManager/DeleteRequest", output = "http://Lab3/SoapManager/DeleteResponse", fault = {
        @FaultAction(className = MissFormatException.class, value = "http://Lab3/SoapManager/Delete/Fault/MissFormatException"),
        @FaultAction(className = OutOfRangeException.class, value = "http://Lab3/SoapManager/Delete/Fault/OutOfRangeException")
    })
    public String delete(
        @WebParam(name = "Id", targetNamespace = "")
        String id)
        throws MissFormatException, OutOfRangeException
    ;

    /**
     * 
     * @param sex
     * @param name
     * @param id
     * @param age
     * @param secondName
     * @return
     *     returns java.lang.String
     * @throws MissFormatException
     */
    @WebMethod(operationName = "Insert")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Insert", targetNamespace = "http://Lab3/", className = "lab3.Insert")
    @ResponseWrapper(localName = "InsertResponse", targetNamespace = "http://Lab3/", className = "lab3.InsertResponse")
    @Action(input = "http://Lab3/SoapManager/InsertRequest", output = "http://Lab3/SoapManager/InsertResponse", fault = {
        @FaultAction(className = MissFormatException.class, value = "http://Lab3/SoapManager/Insert/Fault/MissFormatException")
    })
    public String insert(
        @WebParam(name = "Id", targetNamespace = "")
        String id,
        @WebParam(name = "Name", targetNamespace = "")
        String name,
        @WebParam(name = "SecondName", targetNamespace = "")
        String secondName,
        @WebParam(name = "Age", targetNamespace = "")
        String age,
        @WebParam(name = "Sex", targetNamespace = "")
        String sex)
        throws MissFormatException
    ;

}
